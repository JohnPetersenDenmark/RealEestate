.custom-slider ::ng-deep .ngx-slider .ngx-slider-bar {
        background: rgb(209, 204, 204);
        height: 5px;
   }
.custom-slider ::ng-deep .ngx-slider .ngx-slider-selection {
        background: orange;
   }
.custom-slider ::ng-deep  .ngx-slider .ngx-slider-pointer {
        width: 10px;
        height: 15px;
        top: auto;
       /* to remove the default positioning */
        bottom: 0;
        background-color: blue;
   }
.custom-slider ::ng-deep .ngx-slider .ngx-slider-pointer:after {
        display: none;
   }
.custom-slider ::ng-deep  .ngx-slider .ngx-slider-bubble {
        bottom: 14px;
   }
.custom-slider ::ng-deep .ngx-slider .ngx-slider-limit {
        font-weight: bold;
        color: red;
   }
.custom-slider ::ng-deep .ngx-slider .ngx-slider-tick {
        width: 1px;
        height: 15px;
        margin-left: 4px;
        border-radius: 0;
        background: black;
        top: -1px;
   }
.custom-slider ::ng-deep .ngx-slider .ngx-slider-tick.ngx-slider-selected {
        background: #006eff;
   }
    




[taParams]="params"
 public params = {
    hl: "en",
    ds: "yt",
    xhr: "t",
    client: "youtube"
  };




 public query = "";

  public searchFields : string[] = ["Address1", "City"];
 
 
   handleResultSelected(item: any) {
    this.query = item.Address1;
  }

 <div class="search-results style-3">
        <input type="text" [value]="query" placeholder="type something"
          ngxTypeahead class="col-sm-12 form-control"
         
          [taList]="viewModel" 
          [taItemTpl]="myTemp"
          
          
          (taSelected)="handleResultSelected($event)"
        >
      </div>
      <ng-template #myTemp let-item>
        <div class="item-name">
          {{item.result}}
        </div>
       
      </ng-template>





